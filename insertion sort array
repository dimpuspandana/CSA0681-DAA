def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Test cases for insertion sort
insertion_sort_test_cases = [
    {"input": [3, 1, 4, 1, 5, 9, 2, 6, 5, 3], "expected": [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]},
    {"input": [5, 5, 5, 5, 5], "expected": [5, 5, 5, 5, 5]},
    {"input": [2, 3, 1, 3, 2, 1, 1, 3], "expected": [1, 1, 1, 2, 2, 3, 3, 3]},
]

# Run test cases
for i, test in enumerate(insertion_sort_test_cases):
    result = insertion_sort(test["input"].copy())  # copy to avoid modifying original input
    print(f"Test Case {i + 1}:")
    print(f"Input: {test['input']}")
    print(f"Expected Output: {test['expected']}")
    print(f"Actual Output: {result}")
    print()

# Expected Outputs:
# Test Case 1:
# Input: [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]
# Expected Output: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
# Actual Output: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
#
# Test Case 2:
# Input: [5, 5, 5, 5, 5]
# Expected Output: [5, 5, 5, 5, 5]
# Actual Output: [5, 5, 5, 5, 5]
#
# Test Case 3:
# Input: [2, 3, 1, 3, 2, 1, 1, 3]
# Expected Output: [1, 1, 1, 2, 2, 3, 3, 3]
# Actual Output: [1, 1, 1, 2, 2, 3, 3, 3]
